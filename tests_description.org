#+title: Libft tests description
* Mandatory part
** ft_isalnum
** ft_isalpha
** ft_isascii
** ft_isdigit
** ft_isprint
** ft_strlen
** ft_memset
** ft_bzero
** ft_memcpy
*** Basic input
Basic use of the function.
*** Smaller n
Normal input but with n < strlen(input).
*** n = 0
Normal input but with n = 0.
*** destination & source the same
dst & src pointing on same address.
*** NULL destination
dst set to NULL.
Behavior on ubuntu: segfault.
*** NULL source
src set to NULL.
Behavior on ubuntu: segfault.
*** Both destination & source NULL
dst & src set to NULL.
Behavior on ubuntu: segfault.
** ft_memmove
*** Basic input
Basic use of the function.
*** destination & source the same
dst & src pointing on same address.
*** Overlapping : destination lower than source
dst address set to a lower address than src but with an overlapping size.
*** Overlapping : source lower than destination
src address set to a lower address than dst but with an overlapping size.
*** Smaller n
Normal input but with n < strlen(input).
*** n = 0
Normal input but with n = 0.
*** NULL destination
dst set to NULL.
Behavior on ubuntu: segfault.
*** NULL source
src set to NULL.
Behavior on ubuntu: segfault.
*** Both destination & source NULL
dst & src set to NULL.
Behavior on ubuntu: segfault.

** DONE ft_strlcpy [10/10]
CLOSED: [2023-11-09 jeu. 09:27]
*** CODED Basic input
CLOSED: [2023-11-09 jeu. 08:21]
Basic use of the function.
Behavior: copies size-1 bytes from src to dst + \0.
Return value: length of src.
*** CODED Smaller size
CLOSED: [2023-11-09 jeu. 08:26]
Size smaller than src.
Behavior: copies size-1 bytes from src to dst + \0.
Return value: length of src.
*** CODED Bigger size
CLOSED: [2023-11-09 jeu. 08:28]
Size bigger than src.
Behavior: copies only strlen(src) bytes from src to dst.
Return value: length of src.
*** CODED Size zero
CLOSED: [2023-11-09 jeu. 08:32]
size = 0.
Behavior: doesn't copy anything.
Return value: length of src.
*** CODED dst too small
CLOSED: [2023-11-09 jeu. 08:40]
Normal src & size but size of dst too small.
Behavior: copies size-1 bytes from src to dst + \0 (can segfault).
Return value: length of src.
*** CODED dst overlapping src
CLOSED: [2023-11-09 jeu. 09:16]
dst address set to a lower adress than src but with an overlapping size.
Behavior: copies size-1 bytes from src to dst + \0.
Return value: length of src (after the copy).
*** CODED src overlapping dst
CLOSED: [2023-11-09 jeu. 09:19]
src address set to a lower adress than dst but with an overlapping size.
Behavior: copies size-1 bytes from src to dst + \0.
Return value: length of src (after the copy).
*** CODED NULL dst
CLOSED: [2023-11-09 jeu. 09:22]
dst set to NULL.
Behavior: SEGFAULT.
*** CODED NULL src
CLOSED: [2023-11-09 jeu. 09:27]
src set to NULL.
Behavior: SEGFAULT.
*** CODED NULL dst & src
CLOSED: [2023-11-09 jeu. 09:25]
dst & src set to NULL.
Behavior: SEGFAULT.

** TODO ft_strlcat [9/9]
*** CODED Basic input
CLOSED: [2023-11-12 dim. 19:01]
Basic use of function.
Behavior: Copies size - len(dst) - 1 bytes from src to end of dst + \0.
Return value: Initial length of dst + length of src.
*** CODED Smaller size
CLOSED: [2023-11-12 dim. 19:02]
Size smaller than final buffer.
Behavior: Copies size - len(dst) - 1 bytes from src to end of dst + \0 (Truncation).
Return value: *Initial length of dst + length of src if size >= len(dst) else size + length of src.*
*** CODED Smaller small size
CLOSED: [2023-11-12 dim. 19:05]
Size smaller than len(dst).
Behavior: Doesn't copy anything.
Return value: *size + length of src.*
*** CODED Bigger size
CLOSED: [2023-11-12 dim. 19:07]
Size bigger than final buffer.
Behavior: Does the copy but stops at \0 of src.
Return value: Initial length of dst + length of src.
*** CODED Size zero
CLOSED: [2023-11-12 dim. 19:08]
Size = 0.
Behavior: Doesn't copy anything.
Return value: Length of src (same calculation than if size < len(dst)).
*** CODED NULL dst
CLOSED: [2023-11-12 dim. 19:18]
dst set to NULL.
Behavior: SEGFAULT.
Return value: /
*** CODED NULL dst & size zero
CLOSED: [2023-11-12 dim. 19:18]
dst set to NULL and size set to zero.
Behavior: Doesn't copy anything. (NO SEGFAULT).
Return value: length of src.
*** CODED NULL src
CLOSED: [2023-11-12 dim. 19:18]
src set to NULL.
Behavior: SEGFAULT.
Return value: /
*** CODED NULL dst & src
CLOSED: [2023-11-12 dim. 19:18]
dst & src set to NULL.
Behavior: SEGFAULT.
Return value: /
** DONE ft_toupper
CLOSED: [2023-11-13 lun. 11:34]
*** CODED basic inputs (all unsigned char)
CLOSED: [2023-11-13 lun. 11:33]
** DONE ft_tolower
CLOSED: [2023-11-13 lun. 11:34]
*** CODED basic inputs (all unsigned char)
CLOSED: [2023-11-13 lun. 11:33]
** TODO ft_strchr
*** CODED Basic inputs (c in s)
CLOSED: [2023-11-13 lun. 12:09]
*** CODED multiple c in s
CLOSED: [2023-11-13 lun. 12:09]
*** CODED no c in s
CLOSED: [2023-11-13 lun. 12:09]
*** CODED c set to '\0'
CLOSED: [2023-11-13 lun. 12:09]
*** CODED s set to NULL
CLOSED: [2023-11-13 lun. 12:09]
** TODO ft_strrchr
*** CODED Basic inputs (c in s)
CLOSED: [2023-11-13 lun. 12:12]
*** CODED multiple c in s
CLOSED: [2023-11-13 lun. 12:13]
*** CODED no c in s
CLOSED: [2023-11-13 lun. 12:13]
*** CODED c set to '\0'
CLOSED: [2023-11-13 lun. 12:13]
*** CODED s set to NULL
CLOSED: [2023-11-13 lun. 12:13]
** TODO ft_strncmp
** TODO ft_memchr
** TODO ft_memcmp
** TODO ft_strnstr
** TODO ft_atoi
** TODO ft_calloc
** TODO ft_strdup
** ft_substr
** ft_strjoin
** ft_strtrim
** ft_split
** ft_itoa
** ft_strmapi
** ft_striteri
** ft_putchar_fd
** ft_putstr_fd
** ft_putendl_fd
** ft_putnbr_fd

* Bonus part
** ft_lstnew
** ft_lstadd_front
** ft_lstsize
** ft_lstlast
** ft_lastadd_back
** ft_lstdelone
** ft_lstclear
** ft_lstiter
** ft_lstmap
